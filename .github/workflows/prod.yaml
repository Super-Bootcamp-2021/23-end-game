name: prod

on:
  push:
    branches: [master]

jobs:
  service-test:
    name: end to end service test
    runs-on: ubuntu-latest

    # prerequisite service
    services:
      redis:
        image: redis:5
      nats:
        image: nats:2
      minio:
        image: bitnami/minio:latest
        env:
          MINIO_ACCESS_KEY: minio-root
          MINIO_SECRET_KEY: minio-root-password
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: taskmanager
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # run test automations
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm i
      - run: npm run lint
      - run: npm run svc:test
        env:
          tm_postgres__host: postgres
          tm_postgres__username: postgres
          tm_postgres__password: postgres
          tm_postgres__database: taskmanager
          tm_minio__endPoint: minio
          tm_minio__accessKey: minio-root
          tm_minio__secretKey: minio-root-password
          tm_nats__url: nats://nats:4222
          tm_redis__host: redis
          tm_worker__server__port: 7001
          tm_task__server__port: 7002
          tm_task__workerBaseUrl: http://localhost:7001
          tm_performance__server__port: 7003


  webapp-test:
    name: end to end webapp test
    runs-on: ubuntu-latest

    # run test automations
    steps:
      - uses: actions/checkout@v2
      - uses: cypress-io/github-action@v2
        with:
          browser: chrome
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm i
      - run: npm run web:build
      - run: npm run web:test
